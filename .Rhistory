theme(legend.position = "none")
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda2 = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda, y = coeficientes_lasso2, color = predictor)) +
geom_line() +
scale_x_log10(
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))
) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización") +
theme_bw() +
theme(legend.position = "none")
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda, y = coeficientes_lasso2, color = predictor)) +
geom_line() +
labs(title = "Coeficientes del modelo Lasso en función de la regularización") +
theme_bw() +
theme(legend.position = "none")
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda, y = coeficientes_lasso2, color = predictor)) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización") +
theme_bw() +
theme(legend.position = "none")
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda, y = coeficientes_lasso2, color = predictor)) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización")+
theme(legend.position = "none")
df_coeficientes_ridge2 <- coef(ridge2) %>%
as.matrix() %>%
as_tibble(rownames = "predictor") %>%
rename(coeficiente_ridge2 = s0)
df_coeficientes_ridge2 %>%
filter(predictor != "(Intercept)") %>%
ggplot(aes(x = predictor, y = coeficiente_ridge2)) +
geom_col() +
labs(title = "Coeficientes del modelo Ridge") +
theme_bw() +
theme(axis.text.x = element_text(size = 6, angle = 45))
coef(ridge2)
df_coeficientes_ridge2 %>%
filter(
predictor != "(Intercept)",
coeficiente_ridge2 != 0
)
coef(ridge2)
coef(lasso2)
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda2,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda2 = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda2,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda, y = coeficientes_lasso2, color = predictor)) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización")+
theme(legend.position = "none")
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda2 = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda2,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda2, y = coeficientes_lasso2, color = predictor)) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización")+
theme(legend.position = "none")
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda2 = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda2,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda2, y = lasso2$beta, color = predictor)) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización")+
theme(legend.position = "none")
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda2 = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda2,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda2, y = regularizacion2, color = predictor)) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización")+
theme(legend.position = "none")
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda2 = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda2,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda2, y = regularizacion2$coeficientes_lasso2, color = predictor)) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización")+
theme(legend.position = "none")
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda2 = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda2,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda2, y = coeficientes_lasso2, color = predictor)) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización")+
theme(legend.position = "none")
df_coeficientes_ridge2 %>%
filter(
predictor != "(Intercept)",
coeficiente_ridge2 != 0
)
regularizacion2 %>%
filter(
predictor != "(Intercept)",
coeficientes_lasso2 != 0
)
nrow(regularizacion2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Gráficos y tratamiento de datos
# ==============================================================================
#devtools::install_github("boxuancui/DataExplorer")
library(scales)
library(corrplot)
# Modelado
# ==============================================================================
install.packages("pls")
install.packages("corrr")
install.packages("skimr")
install.packages("DataExplorer")
install.packages("faraway")
install.packages("ggplot")
install.packages("ggplot2")
install.packages("Metrics")
install.packages("lme4")
install.packages("ggplot2")
install.packages("plm")
install.packages("dplyr")
install.packages("rsq")
install.packages("dplyr")
install.packages("glmnet")
library(Metrics)
library(lme4)
library(dplyr)
library(rsq)
data <- read.delim2(file="taller1.txt", header=TRUE, sep = ",", dec = ".")
install.packages("glmnet")
data
modelData <- data.frame(data[,2:5001])
Y1 <- data$y
x <- modelData
set.seed(123)
train <- sample(nrow(data), nrow(data)*0.8)
x_train <- x[train, ]
y_train <- Y1[train]
x_test <- x[-train, ]
y_test <- Y1[-train]
x_train <- scale(x_train)
x_test <- scale(x_test)
ridge <- glmnet::glmnet(x_train, y_train, alpha = 0  )
lasso <- glmnet::glmnet(x_train, y_train, alpha = 1)
ridge_cv <- glmnet::cv.glmnet(x_train, y_train, alpha = 0)
lasso_cv <- glmnet::cv.glmnet(x_train, y_train, alpha = 1)
plot(lasso_cv)
paste("Mejor valor de lambda encontrado para Lasso:", lasso_cv$lambda.min)
paste("Mejor valor de lambda encontrado para Lasso + 1 desviación estándar:", lasso_cv$lambda.1se)
plot(ridge_cv)
paste("Mejor valor de lambda encontrado para ridge:", ridge_cv$lambda.min)
paste("Mejor valor de lambda encontrado para ridge + 1 desviación estándar:", ridge_cv$lambda.1se)
df_coeficientes_ridge <- coef(ridge) %>%
as.matrix() %>%
as_tibble(rownames = "predictor") %>%
rename(coeficiente_ridge = s0)
df_coeficientes_ridge %>%
filter(predictor != "(Intercept)") %>%
ggplot(aes(x = predictor, y = coeficiente_ridge)) +
geom_col() +
labs(title = "Coeficientes del modelo Ridge") +
theme_bw() +
theme(axis.text.x = element_text(size = 6, angle = 45))
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion <- lasso$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda = lasso$lambda)
regularizacion <- regularizacion %>%
pivot_longer(
cols = !lambda,
names_to = "predictor",
values_to = "coeficientes_lasso"
)
regularizacion %>%
ggplot(aes(x = lambda, y = coeficientes_lasso, color = predictor)) +
geom_line() +
scale_x_log10(
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))
) +
labs(title = "Coeficientes del modelo Lasso en función de la regularización") +
theme_bw() +
theme(legend.position = "none")
ridge2 <- glmnet::glmnet(x_train, y_train, lambda = ridge_cv$lambda.1se, alpha = 0 )
lasso2 <- glmnet::glmnet(x_train, y_train, lambda = lasso_cv$lambda.1se,  alpha = 1)
# Predicciones de entrenamiento
# ==============================================================================
predicciones_train <- predict(ridge2, newx = x_train)
# MSE de entrenamiento
# ==============================================================================
training_mse <- mean((predicciones_train - y_train)^2)
paste("Error (mse) de entrenamiento para Ridge:", training_mse)
# Predicciones de test
# ==============================================================================
predicciones_test <- predict(ridge2, newx = x_test)
# MSE de test
# ==============================================================================
test_mse_ridge <- mean((predicciones_test - y_test)^2)
paste("Error (mse) de test para Ridge:", test_mse_ridge)
# Predicciones de entrenamiento
# ==============================================================================
predicciones_train <- predict(lasso2, newx = x_train)
# MSE de entrenamiento
# ==============================================================================
training_mse <- mean((predicciones_train - y_train)^2)
paste("Error (mse) de entrenamiento para Lasso:", training_mse)
# Predicciones de test
# ==============================================================================
predicciones_test <- predict(lasso2, newx = x_test)
# MSE de test
# ==============================================================================
test_mse_lasso <- mean((predicciones_test - y_test)^2)
paste("Error (mse) de test para Lasso:", test_mse_lasso)
df_coeficientes_ridge2 <- coef(ridge2) %>%
as.matrix() %>%
as_tibble(rownames = "predictor") %>%
rename(coeficiente_ridge2 = s0)
df_coeficientes_ridge2 %>%
filter(predictor != "(Intercept)") %>%
ggplot(aes(x = predictor, y = coeficiente_ridge2)) +
geom_col() +
labs(title = "Coeficientes del modelo Ridge") +
theme_bw() +
theme(axis.text.x = element_text(size = 6, angle = 45))
# Evolución de los coeficientes en función de lambda
# ==============================================================================
regularizacion2 <- lasso2$beta %>%
as.matrix() %>%
t() %>%
as_tibble() %>%
mutate(lambda2 = lasso2$lambda)
regularizacion2 <- regularizacion2 %>%
pivot_longer(
cols = !lambda2,
names_to = "predictor",
values_to = "coeficientes_lasso2"
)
regularizacion2 %>%
ggplot(aes(x = lambda2, y = coeficientes_lasso2, color = predictor))
labs(title = "Coeficientes del modelo Lasso en función de la regularización")+
theme(legend.position = "none")
df_coeficientes_ridge2 %>%
filter(
predictor != "(Intercept)",
coeficiente_ridge2 != 0
)
regularizacion2 %>%
filter(
predictor != "(Intercept)",
coeficientes_lasso2 != 0
)
lasso_select <- glmnet::glmnet(x, Y1, lambda = lasso_cv$lambda.1se,  alpha = 1)
plot(lasso_select, xvar = "lambda", label = TRUE)
data.frame(rmse=rmse(pred,Y1))
data.frame(rmse=rmse(pred,Y1))
data <- read.delim2(file="taller1.txt", header=TRUE, sep = ",", dec = ".")
head(data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
# Gráficos y tratamiento de datos
# ==============================================================================
#devtools::install_github("boxuancui/DataExplorer")
library(scales)
library(corrplot)
# Modelado
# ==============================================================================
install.packages("pls")
install.packages("corrr")
install.packages("skimr")
install.packages("DataExplorer")
install.packages("faraway")
install.packages("ggplot")
install.packages("ggplot2")
install.packages("Metrics")
install.packages("lme4")
install.packages("plm")
install.packages("dplyr")
install.packages("rsq")
install.packages("glmnet")
library(Metrics)
library(lme4)
library(dplyr)
library(rsq)
install.packages("glmnet")
install.packages("rsq")
install.packages("dplyr")
install.packages("lme4")
install.packages("Metrics")
install.packages("ggplot2")
library(tidyverse)
library(ggplot2)
install.packages('plyr', repos = "http://cran.us.r-project.org")
# Gráficos y tratamiento de datos
# ==============================================================================
#devtools::install_github("boxuancui/DataExplorer")
library(scales)
library(corrplot)
# Modelado
# ==============================================================================
install.packages("pls")
install.packages("corrr")
install.packages("skimr")
install.packages("DataExplorer")
install.packages("faraway")
install.packages("ggplot")
install.packages("ggplot2")
install.packages("Metrics")
install.packages("lme4")
install.packages("plm")
install.packages("lme4")
install.packages("Metrics")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("rsq")
install.packages("glmnet")
library(Metrics)
library(lme4)
library(dplyr)
library(rsq)
install.packages("glmnet")
install.packages("rsq")
install.packages("dplyr")
install.packages("Metrics")
install.packages("ggplot2")
install.packages("Metrics")
install.packages("dplyr")
install.packages("ggplot2")
library(tidyverse)
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
library("ggplot2")
install.packages("palmerpenguins", repos = "http://cran.us.r-project.org")
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
library("palmerpenguins")
library(scales)
library(corrplot)
install.packages("pls")
install.packages("corrr")
install.packages("skimr")
install.packages("DataExplorer")
install.packages("faraway")
install.packages("ggplot")
install.packages("ggplot2")
install.packages("Metrics")
install.packages("lme4")
install.packages("plm")
install.packages("Metrics")
install.packages("lme4")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("rsq")
install.packages("glmnet")
library(Metrics)
library(lme4)
library(dplyr)
library(rsq)
install.packages("dplyr")
install.packages("rsq")
install.packages("glmnet")
install.packages("lme4")
install.packages("ggplot2")
install.packages("ggplot2")
library(tidyverse)
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
library("ggplot2")
install.packages("palmerpenguins", repos = "http://cran.us.r-project.org")
install.packages("weatherData",repos = "http://cran.us.r-project.org")
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
install.packages("palmerpenguins", repos = "http://cran.us.r-project.org")
library("palmerpenguins")
library(scales)
library(corrplot)
install.packages("pls")
